createdAt: "2019-08-17T10:09:54.010Z"
updatedAt: "2019-08-21T05:56:50.220Z"
type: "MARKDOWN_NOTE"
folder: "8eecd56ec7357d6ca8d6"
title: "Vuex - 1. 概要"
tags: [
  "Vuex"
]
content: '''
  # Vuex - 1. 概要
  
  大規模プロジェクトにおいて、何層にも重なったコンポーネント間で`props`と`$emit`でバケツリレーのようにデータをやりとりするのは現実的でない。
  
  そこで、各々のコンポーネントから共有している状態を抽出してグローバルなシングルトンでの管理を可能にするのが Vuex である。
  
  - Vuex ストアはリアクティブである
  - ストアの状態を更新するには、ミューテーションをコミットする必要がある
  - Flux アーキテクチャに影響を受けている
  
  
  ## インストール
  
  ```bash
  $ npm install vuex
  ```
  
  ```js:main.js
  import Vue from 'vue'
  import vuex from 'vuex'
  import App from './App'
  import store from './store'
  
  Vue.use(vuex)
  
  new Vue({
    el: '#app',
    store,
    components: { App },
    template: '<App/>'
  })
  ```
  
  これは、`Vue.use(Vuex)`で Vuex を有効にし、ルートコンポーネントに`store`オプションを指定することで全ての子コンポーネントにストアが適用される。
  
  ストアには`this.$store`でアクセスできる。
  
  ## 参考
  
  [Fluxとはなんなのか - Qiita](https://qiita.com/knhr__/items/5fec7571dab80e2dcd92)
  
'''
linesHighlighted: []
isStarred: false
isTrashed: false
