createdAt: "2019-08-20T11:55:16.082Z"
updatedAt: "2019-08-23T13:50:47.434Z"
type: "MARKDOWN_NOTE"
folder: "c50fd792c06c102068ae"
title: "オブジェクトリテラルでのプロパティの定義"
tags: []
content: '''
  # オブジェクトリテラルでのプロパティの定義
  
  ```js
  const d = 42;
  const obj = {
    a: 42,
    "b": 42,
    0: 42,
    ["c"] : 42,
    d,
    e(){},
    get f(){},
    set g(v){},
    *h(){}
  }
  ```
  
  ## キーにシンボル
  
  ```js
  const obj = {
    a: 42,
    a1: 42,
    // 1a: 42, エラー
    \\u0070: 42,  // p: 42 と同義
    if: 42  // 予約語も可能
  }
  ```
  
  ## キーに文字列
  
  ```js
  const obj = {
    "b": 42,
    'b': 42,
    '': 42
  }
  ```
  
  ## キーに数値
  
  キーに数値を指定した場合は文字列に変換される。
  
  ```js
  const obj = {
    1: 42,
    1.23: 42,
    2e-10: 42,
    1.23: 42,
    .123: 42
    123.: 42,
    0b0011: 42,
    0123: 42
  }
  
  for (let i in obj) {
    console.log(`i: ${typeof i}`)
  }
  ```
  
  ## Computed property names
  
  ```js
  const obj = {
    ["pr" + "op"] : 42,
    [1 + 2]: 42,
    [!true]: 42,
    [{}]: 42,
    [function(){ return "foo"; }()]: 42,
    [Symbol()]: 42 
  }
  ```
  
  ## `: value`の省略
  
  ```js
  const prop = 0;
  const obj = { prop }  // { prop: 0}
  ```
  
  ## 参考
  
  [オブジェクトリテラルのプロパティ/メソッドのいろんな書き方（ES6版） - Qiita](https://qiita.com/kura07/items/356bd37733f457d3177f#これであなたも)
  
  
'''
linesHighlighted: []
isStarred: false
isTrashed: false
