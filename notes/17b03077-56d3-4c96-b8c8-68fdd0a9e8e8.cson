createdAt: "2019-05-09T12:43:06.762Z"
updatedAt: "2019-07-10T14:09:47.359Z"
type: "MARKDOWN_NOTE"
folder: "b6b5a46a79484e873ebb"
title: "ps"
tags: []
content: '''
  # `ps`
  
  - OS 上で実行中のプロセス一覧を表示
  - プロセスに関する以下の情報が出力される
    - プロセスID (PID)
    - CPU 使用時間
    - コマンド名
    - 端末番号
    - ユーザー名
  
  ## オプション
  
  `-` の有無に注意する。
  
  - `-A`, `-e` - すべてのプロセスを表示
  - `a` - 端末を持つすべてのプロセスを表示
  - `x` - 端末を持たないすべてのプロセスを表示
  - `r` - 実行中のプロセスを表示
  - `-C [コマンドリスト]` - 実行ファイル名を指定して表示
  - `-u [ユーザーリスト]` - ユーザーを指定して表示
  - `-g [グループリスト]` - グループを指定して表示
  - `-p [PID リスト]` - プロセスIDを指定して表示
  - `c` - コマンド名を表示
  - `e` - コマンド名の後に環境変数などを表示
  - `u` - ユーザー指向のフォーマットで表示
  - `h`, `--no-headers` - ヘッダー行を表示しない
  - `-l` - 長いフォーマットで表示
  - `f`, `-H`, `--forest` - 階層で表示
  - `o`, `-o`, `--format` - フォーマットを指定
  - `w`, `-w` - 出力時の幅を広げる
  - `--cols [文字数]`, `--width [文字数]` - 出力時の幅を指定する
  - `--rows [行数]`, `--ines [行数]` - 出力時の行数を指定する
  - `k`, `--sort` - 並び替えて表示する
  
  ## 出力項目
  
  - pid - プロセスID
  - ppid - 親プロセスのID
  - s - プロセスの状態
  - stat - 複数文字によるプロセスの状態
  - pcpu - CPU の使用率
  - pmem - メモリの使用率
  - time - CPU の累積使用時間
  - start - コマンドが起動した時刻
  - nice - nice値 (優先順位)
  - args - コマンド名 (引数つき)
  - comm - コマンド名 (実行ファイル名のみ)
  - tt - 制御端末
  - uid - 実効グループのユーザーID
  - user - 実効グループのユーザー名
  - gid - 実効グループのID
  - group - 実行グループの名前
  
  ## 例
  
  ```bash
  
  # 端末を使っているすべてのプロセス、端末を使っていないすべてンのプロセス、プロセスを実行しているユーザー名
  $ ps aux
  
  # 出力項目を指定
  $ ps o pid, user, group, args
  
  # 実行結果を並び替えて使用メモリについて降順にする
  $ ps axo pid, user ,group k pmem
  
  # 実行結果を並び替えて使用メモリについて昇順にする
  $ ps axo pid, user, group k -pmem
  ```
  
'''
linesHighlighted: []
isStarred: false
isTrashed: false
