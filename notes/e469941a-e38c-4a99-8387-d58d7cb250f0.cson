createdAt: "2019-10-07T14:49:16.822Z"
updatedAt: "2019-10-07T15:16:29.144Z"
type: "MARKDOWN_NOTE"
folder: "b6b5a46a79484e873ebb"
title: "od"
tags: [
  "ダンプ"
]
content: '''
  # `od`
  
  ファイルの内容をダンプして標準出力に出力させるためのコマンド。
  
  ## ダンプ
  
  > デバッグやデータ修復のために、ファイルやメモリの内容をディスクに出力すること。データベースにおいては、データベースの情報をファイルに書き出して保存すること。 
  
  [ダンプとは (dump)： - IT用語辞典バイナリ](https://www.sophia-it.com/content/ダンプ)
  
  
  ## オプション
  
  - `-A [指定]`,	`--address-radix=[指定]` - ファイルオフセット（出力位置）の表示形式を「`o`（8進数）」「`x`（16進数）」「`d`（10進数）」で指定する
  - `-j [バイト数]`, `--skip-bytes=[バイト数]` -	先頭からスキップするバイト数を指定する（「`-j100`」で先頭の100バイトを飛ばして表示）
  - `-N [バイト数]`, `--read-bytes=[バイト数]` - 表示するバイト数を指定する（「`-N80`」で先頭の80バイト、「`-j100 -N80`」で101バイト目から80バイト分を表示）
  - `-S [バイト数]`, `--strings=[バイト数]` - 可読文字（印字可能な文字）が指定したバイト数分連続していたら、その箇所を表示する（「`-S 4`」で「strings」コマンド相当）
  - `-t [タイプ]`,	`--format=[タイプ]` - 出力フォーマットを指定する
  - `-v`, `--output-duplicates`	-「`*`」マークによる出力行の省略をやめる
  - `-w[バイト数]`, `--width=[バイト数]` - 1行当たりの出力バイト数を指定する
  
  ### 出力フォーマット
  
  - `a` -	文字名。最上位ビットは無視される（「`-a`」で「`-t a`」相当）
  - `c` -	ASCII文字または「`\\`」エスケープ文字（「`-c`」で「`-t c`」相当）
  - `d` -	符号付き10進数（「`-i`」で「`-t dI`」、「`-l`」で「`-t dL`」相当）
  - `f` -	浮動小数点（「`-f`」で「`-t fF`」相当）
  - `o` -	8進数（「`-b`」で「`-t o1`」、「`-o`」で「`-t o2`」相当）
  - `u` -	符号なし10進数（「`-d`」で「`-t u2`」相当）
  - `x` -	16進数（「`-x`」で「`-t x2`」相当）
  
  ## 例
  
  ASCII文字または「`\\`」エスケープ文字で表示
  
  ```bash
  $ od -c test.txt
  0000000    t   e   s   t  \\n   t   e   s   t  \\n   t   e   s   t  \\n   t
  0000020    e   s   t  \\n                                                
  0000024
  ```
  
  ## 参考
  
  [【 od 】コマンド――ファイルを8進数や16進数でダンプする：Linux基本コマンドTips（93） - ＠IT](https://www.atmarkit.co.jp/ait/articles/1703/10/news027.html)
  [バイナリファイルを表示するには](https://www.atmarkit.co.jp/flinux/rensai/linuxtips/100showbinary.html)
  
'''
linesHighlighted: []
isStarred: false
isTrashed: false
