createdAt: "2019-08-20T11:36:10.921Z"
updatedAt: "2019-10-10T14:12:01.200Z"
type: "MARKDOWN_NOTE"
folder: "c50fd792c06c102068ae"
title: "オブジェクト定義時にプロパティ名に変数を用いる"
tags: [
  "ES6"
  "computed_property_name"
]
content: '''
  # オブジェクト定義時にプロパティ名に変数を用いる
  
  ## ES5-
  
  ```js
  var id = '12345'
  
  var obj = {}
  obj[id] = {
    name: 'John'
  }
  console.log(obj[id])  // John
  ```
  
  ## ES6+
  
  ES6 以降では computed property name を用いることができる。
  
  ```js
  const id = '12345'
  
  const obj = {
    [id]: { name: 'john'}
  }
  console.log(obj[id])  // John
  ```
  
  `[]` 内のデータは計算後、`toString()`メソッドが呼ばれて文字列に変換されてプロパティ名として設定される。
  
  以下は全て同じプロパティ名である
  
  ```js
  const obj0 = {
    10: {}
  };
  
  const obj1 = {
    [(1 + 4) * 2 ]: {}
  };
  
  const obj2 = {
    ['1' + '0']: {}
  };
  
  const obj3 = {
    [(() => 5*2)()]: {}  // 10 を返す関数を即時実行
  };
  
  const objOf10 = { toString: () => 10 };  // 文字列にすると 10 を返すメソッドをもつオブジェクト
  const obj4 = {
    [objOf10]: {}  // toString() が2回呼び出されるイメージ
  };
  ```
  
  ## 参考
  
  [動的にプロパティ名を設定できるようになりました。（現代的JavaScriptおれおれアドベントカレンダー2017 – 07日目） \\| Ginpen.com](https://ginpen.com/2017/12/07/computed-property-name/)
  
'''
linesHighlighted: []
isStarred: false
isTrashed: false
