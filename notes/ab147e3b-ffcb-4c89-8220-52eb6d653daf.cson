createdAt: "2019-05-05T10:46:57.982Z"
updatedAt: "2019-05-05T12:57:52.465Z"
type: "MARKDOWN_NOTE"
folder: "cfb8bb7394508a89ba1d"
title: "Linux tips"
tags: [
  "tips"
  "Linux"
]
content: '''
  # Linux tips
  ### パッケージ管理
  #### RedHat系(RedHat, EnterPrise Linux, CentOS, Fedora)
  - rpm - 個々のパッケージ、パッケージ個々をカスタマイズしたり単発なパッケージをインストールする時、個々のファイル一覧を取得したいときなど
  - yum (ヤム) - rpmパッケージがあるリポジトリからrpmの依存関係を管理
  - dnf - yum の後継版。python2 系で書かれていた yum を C で再設計したもので、Fedora22 から正式にデフォルトのパッケージマネージャーとして採用されている。メモリ消費量低減やメタデータ同期の効率化が図られている。
  ##### dnf のインストール 
  ```bash
  $ yum install dnf
  ```
  これがダメなら、以下を実行
  ```
  $ wget http://springdale.math.ias.edu/data/puias/unsupported/7/x86_64/dnf-conf-0.6.4-2.sdl7.noarch.rpm
  $ wget http://springdale.math.ias.edu/data/puias/unsupported/7/x86_64/dnf-0.6.4-2.sdl7.noarch.rpm
  $ wget http://springdale.math.ias.edu/data/puias/unsupported/7/x86_64/python-dnf-0.6.4-2.sdl7.noarch.rpm
  $ yum install python-dnf-0.6.4-2.sdl7.noarch.rpm dnf-0.6.4-2.sdl7.noarch.rpm dnf-conf-0.6.4-2.sdl7.noarch.rpm
  $ rm -f python-dnf-0.6.4-2.sdl7.noarch.rpm
  $ rm -f dnf-0.6.4-2.sdl7.noarch.rpm
  $ rm -f dnf-conf-0.6.4-2.sdl7.noarch.rpm
  ```
  
  #### Debian系(Debain, Ubuntu)
  - apt (アプト)
  
  ##### cf. 
  - gem（ジェム，ゲム） - Rubyのパッケージ管理
  - npm - Node.js のパッケージ管理
  
  ### CentOS-7+
  - chkconfig [サービス名] on/off → systemctl enable/disable
  システム起動時に自動起動するサービスの設定や不必要なサービスを停止するなどの設定を行う。例えば、サーバ起動時にApache(httpd)も同時に起動させたいとき、chkconfigで設定を行うことで実現できる。
  
  - systemctlはすべてのユニットを扱える
  - serviceはserviceタイプのユニットしか扱えない
  → 7+ ではsystemctlだけで対処可能？
    - service → systemctl
    - iptables → firewalld
  
  ### binとは
  binとは、Binary codeのことで、実行可能プログラム置き場ということ。バイナリということはコンパイル型の言語により作られたプログラムが置かれる。
  普段使ってるコマンドは`bin`ディレクトリ下のファイルを実行しているに過ぎない。
  #### /bin
  FHS(Filesystem Hierarchy Standard)によって定められたシングルユーザを含めたどのユーザでも使えるコマンド。
  #### /usr/bin
  ユーザーが一般的に使用するコマンドで、緊急時のシステム保守に必須ではないコマンドを配置。
  #### ~/bin
  ログインしているユーザに依存したコマンドが格納される。一般に`/usr/local/bin`以下には、自分でコンパイル，ダウンロードしたものを置いておくために使われる。
  
  
  ### ps コマンド
  Linux 上で動作しているプロセスを表示
  ```bash
  $ ps aux
  $ ps auxf
  ```
  
  ### kill コマンド
  ```bash
  kill 9 [processID]
  ```
  
  ### zsh
  ``` bash
  $ yum install zsh
  ```
  
  #### 使用できるシェルに zsh を追加
  ```:/etc/shells
  + /usr/bin/zsh
  ```
  
  #### シェルを変更
  ```bash
  $ which zsh
  /usr/bin/zsh
  $ chsh -s /usr/bin/zsh
  ```
  
  #### カスタマイズ
  ```bash
  $ vi ~/.zshrc
  ```
  rmate で開くとキャリッジリターンが ^M となって文字化けするので vi で編集する。
  
  
'''
linesHighlighted: []
isStarred: false
isTrashed: false
