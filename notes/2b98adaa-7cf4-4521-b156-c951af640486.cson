createdAt: "2019-10-10T14:46:06.057Z"
updatedAt: "2019-10-13T03:01:51.541Z"
type: "MARKDOWN_NOTE"
folder: "b6b5a46a79484e873ebb"
title: "zip"
tags: []
content: '''
  # `zip`
  
  ファイルを ZIP 形式で圧縮する。
  
  ```bash
  $ zip [オプション] ZIPファイル [対象ファイル]
  ```
  
  ## オプション
  
  ### 基本
  
  - `-f`, `--freshen` - 変更があったファイルの分だけZIPファイルを更新する
  - `-u`, `--update` - 変更があったファイルの更新または新規ファイルの追加だけを行う
  - `-d`, `--delete` - 指定したファイルをZIPファイルから削除する
  - `-m`, `--move` - ZIPファイルに移動する（元のファイルは削除される）
  - `-r`, `--recurse-paths` - ディレクトリ内のファイルを再帰的に扱う
  - `-T`, `--test` - 動作をテストする（異常があった場合ZIPファイルは更新されず、「-m」オプション指定時のファイル削除も行わない）
  
  ### 対象ファイル関連
  
  - `-t [日付]`, `--from-date=[日付]` - ファイルの更新日が指定した日付以降のものを対象とする（日付は「mmddyyyy」で指定）
  - `-tt [日付]`, `--before-date=[日付]` - ファイルの更新日が指定した日付以前のものを対象とする（日付は「mmddyyyy」で指定）
  - `-@` - 処理対象のファイル名を標準入力から読み込む
  - `-x [ファイル]`, `--exclude=[ファイル]` - 対象から外すファイル名を指定する（対象ファイルの後で指定）
  - `-i [ファイル]`, `--include=[ファイル]` - 対象とするファイル名を限定する（対象ファイルの後で指定）
  - `-n [拡張子]`, `--suffixes=[拡張子]` - 指定した拡張子は圧縮しない
  - `-R`, `--recurse-patterns` - 指定パターンを再帰的に探して対象にする（例えば、`-R ZIPファイル "*.txt"`でカレントディレクトリ下の「*.txt」を圧縮対象にする）
  
  ### 格納する内容関連
  
  - `-D`, `--no-dir-entries` - ディレクトリは格納せず、ファイルだけを格納する
  - `-y`, `--symlinks` - シンボリックリンクをたどらずに、シンボリックリンクのまま格納する
  - `-p`, `--paths` - 相対パス名も含めて格納する（デフォルト）
  - `-j`, `--junk-paths` ディレクトリ名なしで格納する
  - `-X`, `--no-extra` 拡張属性は格納しない
  - `-l`, `--to-crlf` 改行コードを`LF`から`CRLF`に変換する
  - `-ll`, `--from-crlf` - 改行コードを`CRLF`から`LF`に変換する
  
  ### 圧縮ファイル関連
  
  - `-0～9` - 圧縮率の調整。「`-0`」は圧縮せずZIPファイルに格納、「`-9`」で圧縮率を最高に。（デフォルトは「`-6`」）
  - `-s [分割サイズ]`, `--split-size=[分割サイズ]` - 分割ZIPファイルを作成するときのサイズ
  - `-O [ファイル名]`, `--output-file=[ファイル名]`, `--out=[ファイル名]` - 出力するZIPファイル名（ZIPファイルを元に、別のZIPファイルを作成するような場合に使用）
  - `-e`, `--encrypt` -	暗号化する
  - `-o`, `--latest-time` -	ZIPファイルのタイムスタンプを、対象ファイルの最新ファイルと同じにする
  - `-F`, `--fix` - ZIPファイルを修復する
  - `-FF`, `--fixfix` - ZIPファイルをさらに細かく修復する
  - `-J`, `--junk-sfx` - 圧縮ファイルの拡張子`.zip`を付けない
  - `-z`, `--archive-comment`	- 圧縮後、ZIPファイルにコメントを追加する
  
  ### 動作関連
  
  - `-b [パス]`, `--temp-path=[パス]`	- 作業ディレクトリを指定する
  - `-q`, `--quiet` - 動作中のメッセージを表示しない
  - `-v`, `--verbose`	- 動作中のメッセージを詳しくする
  - `-db`, `--display-bytes` - 処理したサイズを表示する
  - `-dc`, `--display-counts` - 処理したファイル数を表示
  - `-du`, `--display-usize` - 元のファイルサイズを表示
  - `-h2`, `--more-help` - 詳しいヘルプを表示
  
  ## 例
  
  `dist`配下にあるファイルをサブディレクトリ含めてすべて圧縮。
  
  ```bash
  $ zip index.zip dist/* -r
  ```
  
  ディレクトリ以下のツリー構造を維持しない場合、先に対象ディレクトリに移動する必要がある。
  
  ```bash
  # ディレクトリ構造を維持して圧縮
  $ zip index.zip dist/js/* -r
  
  # 対象ディレクトリ以下を圧縮
  $ cd ./dist/js; zip index.zip *.js -r
  ```
  
  ## 参考
  
  [【 zip 】コマンド（基礎編）――ファイルをZIP形式で圧縮する：Linux基本コマンドTips（34） - ＠IT](https://www.atmarkit.co.jp/ait/articles/1607/25/news021.html)
  
'''
linesHighlighted: []
isStarred: false
isTrashed: false
